local coloredglass_sound = "default.node_sound_glass_defaults()"

minetest.register_node(":default:glass", {
	description = "Glass",
	drawtype = "glasslike",
	tiles = {"glass.png"},
	inventory_image = minetest.inventorycube("glass.png"),
	paramtype = "light",
	sunlight_propagates = true,
    is_ground_content = false,
	groups = {cracky=3,oddly_breakable_by_hand=3},
	sounds = coloredglass_sound,
})

minetest.register_alias("coloredglass:dark_blue", "coloredglass:blue")
minetest.register_alias("coloredglass:gold", "coloredglass:yellow")
local coloredglass = {}
-- This uses a trick: you can first define the recipes using all of the base
-- colors, and then some recipes using more specific colors for a few non-base
-- colors available. When crafting, the last recipes will be checked first.
coloredglass.dyes = {
	{"white",      "White",      "basecolor_white"},
	{"grey",       "Grey",       "basecolor_grey"},
	{"black",      "Black",      "basecolor_black"},
	{"red",        "Red",        "basecolor_red"},
	{"yellow",     "Yellow",     "basecolor_yellow"},
	{"green",      "Green",      "basecolor_green"},
	{"cyan",       "Cyan",       "basecolor_cyan"},
	{"blue",       "Blue",       "basecolor_blue"},
	{"magenta",    "Magenta",    "basecolor_magenta"},
	{"orange",     "Orange",     "excolor_orange"},
 	{"brown",      "Brown",      "unicolor_dark_orange"},
}


for _, row in ipairs(coloredglass.dyes) do
	local name = row[1]
	local desc = row[2]
	local craft_color_group = row[3]
	-- Node Definition
	minetest.register_node("coloredglass:"..name, {
		description = desc.." Glass",
		drawtype = "glasslike",
        tiles = {"glass_"..name..".png"},
        inventory_image = minetest.inventorycube("glass_"..name..".png"),
        paramtype = "light",
        sunlight_propagates = true,
        is_ground_content = false,
		groups = {cracky=3,oddly_breakable_by_hand=3},
		sounds = coloredglass_sound,
	})
	if craft_color_group then
		-- Crafting from dye and white wool
		minetest.register_craft({
			type = "shapeless",
			output = 'coloredglass:'..name,
			recipe = {'group:dye,'..craft_color_group, 'group:coloredglass'},
		})
	end
end

print("[Colored Glass] Loaded!")
